msgid ""
msgstr ""
"Project-Id-Version: torchvision 0.7.0.9000\n"
"POT-Creation-Date: 2025-08-15 10:15+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: conditions.R:2
msgid "type_error"
msgstr ""

#: conditions.R:6
msgid "value_error"
msgstr ""

#: conditions.R:10
msgid "runtime_error"
msgstr ""

#: conditions.R:14
msgid "not_implemented_error"
msgstr ""

#: conditions.R:18
msgid "warning"
msgstr ""

#: conditions.R:35
msgid "stop_iteration_error"
msgstr ""

#: conditions.R:41
msgid "deprecated"
msgstr ""

#: dataset-caltech.R:61 dataset-cifar.R:52 dataset-coco.R:85 dataset-coco.R:305 dataset-eurosat.R:57 dataset-fer.R:63 dataset-fgvc.R:91 dataset-flickr.R:69 dataset-flickr.R:231 dataset-flowers.R:92 dataset-lfw.R:108 dataset-lfw.R:246 dataset-mnist.R:86 dataset-mnist.R:234 dataset-mnist.R:421 dataset-oxfordiiitpet.R:71 dataset-oxfordiiitpet.R:283 dataset-oxfordiiitpet.R:347 dataset-pascal.R:136 dataset-pascal.R:294 dataset-places365.R:98
msgid ""
"Dataset {.cls {class(self)[[1]]}} (~{.emph {self$archive_size}}) will be "
"downloaded and processed if not already available."
msgstr ""

#: dataset-caltech.R:66 dataset-caltech.R:187 dataset-coco.R:90 dataset-coco.R:310 dataset-eurosat.R:64 dataset-fer.R:70 dataset-flowers.R:97 dataset-lfw.R:113 dataset-lfw.R:251 dataset-mnist.R:91 dataset-mnist.R:239 dataset-mnist.R:426 dataset-oxfordiiitpet.R:76 dataset-oxfordiiitpet.R:288 dataset-oxfordiiitpet.R:352 dataset-pascal.R:141 dataset-pascal.R:299 dataset-places365.R:103 dataset-plankton.R:89
msgid "Dataset not found. You can use `download = TRUE` to download it."
msgstr ""

#: dataset-caltech.R:84 dataset-caltech.R:208 dataset-lfw.R:135 dataset-lfw.R:286 dataset-oxfordiiitpet.R:95 dataset-oxfordiiitpet.R:302 dataset-oxfordiiitpet.R:366 dataset-pascal.R:149 dataset-pascal.R:317 dataset-plankton.R:93
msgid ""
"{.cls {class(self)[[1]]}} dataset loaded with {self$.length()} images across "
"{length(self$classes)} classes."
msgstr ""

#: dataset-caltech.R:117 dataset-coco.R:187 dataset-eurosat.R:81 dataset-flickr.R:136 dataset-lfw.R:146 dataset-oxfordiiitpet.R:107 dataset-pascal.R:158 dataset-plankton.R:100
msgid "Downloading {.cls {class(self)[[1]]}}..."
msgstr ""

#: dataset-caltech.R:125 dataset-cifar.R:111 dataset-coco.R:193 dataset-eurosat.R:88 dataset-fer.R:129 dataset-flowers.R:136 dataset-lfw.R:157 dataset-lfw.R:172 dataset-mnist.R:121 dataset-mnist.R:264 dataset-mnist.R:453 dataset-oxfordiiitpet.R:115 dataset-pascal.R:168 dataset-places365.R:182 dataset-plankton.R:105 models-vit.R:49
msgid "Corrupt file! Delete the file in {archive} and try again."
msgstr ""

#: dataset-caltech.R:136 dataset-cifar.R:115 dataset-coco.R:199 dataset-eurosat.R:104 dataset-fer.R:134 dataset-fgvc.R:178 dataset-flickr.R:154 dataset-flowers.R:158 dataset-lfw.R:179 dataset-mnist.R:141 dataset-mnist.R:300 dataset-oxfordiiitpet.R:154 dataset-pascal.R:191 tiny-imagenet-dataset.R:67
msgid ""
"Dataset {.cls {class(self)[[1]]}} downloaded and extracted successfully."
msgstr ""

#: dataset-caltech.R:182
msgid ""
"Dataset {.cls {class(self)[[1]]}} (~{.emph {self$archive_size}}) will be "
"downloaded and processed if not already cached."
msgstr ""

#: dataset-cifar.R:59
msgid "Files not found. Use download = TRUE"
msgstr ""

#: dataset-cifar.R:79
msgid ""
"Dataset {.cls {class(self)[[1]]}} loaded with {length(self$y)} images across "
"{length(self$classes)} classes."
msgstr ""

#: dataset-cifar.R:106 dataset-fer.R:124 dataset-fgvc.R:169 dataset-flowers.R:131 dataset-mnist.R:125 dataset-mnist.R:255 tiny-imagenet-dataset.R:43
msgid "Downloading {.cls {class(self)[[1]]}} ..."
msgstr ""

#: dataset-coco.R:95 dataset-coco.R:315
msgid ""
"{.cls {class(self)[[1]]}} dataset loaded with {length(self$image_ids)} "
"images."
msgstr ""

#: dataset-coco.R:326
msgid "Index out of bounds"
msgstr ""

#: dataset-eurosat.R:69
msgid ""
"Dataset {.cls {class(self)[[1]]}} loaded with {length(self$data)} images "
"across {length(self$classes)} classes."
msgstr ""

#: dataset-eurosat.R:92
msgid "Extracting {.cls {class(self)[[1]]}} archive..."
msgstr ""

#: dataset-eurosat.R:94
msgid "Extraction of {.cls {class(self)[[1]]}} is complete."
msgstr ""

#: dataset-eurosat.R:98
msgid "Downloading {.cls {class(self)[[1]]}} split file: {self$split_url}"
msgstr ""

#: dataset-eurosat.R:102
msgid "Downloaded split file `{self$split_file}` is empty."
msgstr ""

#: dataset-eurosat.R:117
msgid "Image file `{filename}` not found."
msgstr ""

#: dataset-eurosat.R:129
msgid "Label `{label}` not found in class_to_idx."
msgstr ""

#: dataset-fer.R:83 dataset-fer.R:91 dataset-mnist.R:267 tiny-imagenet-dataset.R:48
msgid "Processing {.cls {class(self)[[1]]}} ..."
msgstr ""

#: dataset-fgvc.R:96 dataset-flickr.R:73 dataset-flickr.R:235
msgid "Dataset not found. Use `download = TRUE` to download it."
msgstr ""

#: dataset-fgvc.R:128
msgid ""
"{.cls {class(self)[[1]]}} dataset loaded with {length(self$image_paths)} "
"images across {length(self$classes[[annotation_level]])} classes."
msgstr ""

#: dataset-fgvc.R:173 dataset-flickr.R:143
msgid "Corrupt file! Delete the file at {archive} and try again."
msgstr ""

#: dataset-flickr.R:111
msgid "The following IDs are missing captions: {paste(missing, collapse=', ')}"
msgstr ""

#: dataset-flickr.R:128 dataset-flickr.R:256
msgid ""
"{.cls {class(self)[[1]]}} dataset loaded with {length(self$images)} images "
"across {length(self$classes)} classes."
msgstr ""

#: dataset-flowers.R:102
msgid ""
"Split {.val {self$split}} of dataset {.cls {class(self)[[1]]}} loaded with "
"{self$.length()} samples."
msgstr ""

#: dataset-flowers.R:126
msgid ""
"Split {.val {self$split}} of dataset {.cls {class(self)[[1]]}} is already "
"processed and cached."
msgstr ""

#: dataset-flowers.R:140
msgid "{.cls {class(self)[[1]]}} Extracting images and processing dataset..."
msgstr ""

#: dataset-mnist.R:102
msgid ""
"Dataset {.cls {class(self)[[1]]}} loaded with {length(self$targets)} images."
msgstr ""

#: dataset-mnist.R:126
msgid "Processing {.cls {class(self)[[1]]}}..."
msgstr ""

#: dataset-mnist.R:440
msgid "{.cls {class(self)[[1]]}} dataset processed successfully!"
msgstr ""

#: dataset-places365.R:128
msgid ""
"{.cls {class(self)[[1]]}} Split '{self$split}' loaded with {length(self)} "
"samples."
msgstr ""

#: dataset-places365.R:155
msgid "Invalid split: {self$split}"
msgstr ""

#: dataset-places365.R:163
msgid "Downloading {.cls {class(self)[[1]]}} split '{self$split}'..."
msgstr ""

#: dataset-plankton.R:84
msgid ""
"Split {.val {self$split}} of dataset {.cls {class(self)[[1]]}} (~{.emph "
"{self$archive_size}}) will be downloaded and processed if not already "
"available."
msgstr ""

#: extension.R:2
msgid ""
"has_ops() Not implemented yet. https://github.com/pytorch/vision/blob/"
"b266c2f1a5c10f5caf22f5aea7418acc392a5075/torchvision/extension.py#L60"
msgstr ""

#: extension.R:8
msgid ""
"Couldn't load custom C++ ops. This can happen if your torch and torchvision\n"
"       versions are incompatible, or if you had errors while compiling "
"torchvision\n"
"       from source. Please reinstall torchvision so that it matches your "
"torch install."
msgstr ""

#: folder-dataset.R:19
msgid ""
"Both extensions and is_valid_file cannot be None or not None at the same time"
msgstr ""

#: folder-dataset.R:140
msgid "unknown extension {ext} in path {path}"
msgstr ""

#: model-detection-anchor-utils.R:83
msgid "{.var cell_anchors} should not be NULL"
msgstr ""

#: model-detection-anchor-utils.R:86
msgid "Anchors should be a list(list(int)) because each feature"
msgstr ""

#: model-detection-anchor-utils.R:87
msgid "map could potentially have different sizes and aspect ratios."
msgstr ""

#: model-detection-anchor-utils.R:88
msgid "There needs to be a match between the number of"
msgstr ""

#: model-detection-anchor-utils.R:89
msgid "feature maps passed and the number of sizes / aspect ratios specified."
msgstr ""

#: model-detection-anchor-utils.R:164
msgid "{.var aspect_ratios} and {.var steps} should have the same length"
msgstr ""

#: models-alexnet.R:58 models-inception.R:435 models-mobilenetv2.R:15
msgid ""
"Model weights for {.cls {class(model)[1]}} ({.emph {r[3]}}) will be "
"downloaded and processed if not already available."
msgstr ""

#: models-alexnet.R:61 models-deeplabv3.R:254 models-efficientnet.R:229 models-efficientnetv2.R:199 models-fcn.R:194 models-fcn.R:243 models-inception.R:438 models-mobilenetv2.R:18 models-resnet.R:248 models-vgg.R:114
msgid "Corrupt file! Delete the file in {state_dict_path} and try again."
msgstr ""

#: models-deeplabv3.R:216 models-fcn.R:170 models-fcn.R:219
msgid "Pretrained weights require num_classes = 21."
msgstr ""

#: models-deeplabv3.R:223
msgid "`pretrained_backbone` ignored when `pretrained = TRUE`."
msgstr ""

#: models-deeplabv3.R:251
msgid "Downloading {.cls {arch}} pretrained weights (~{.emph {info[3]}}) ..."
msgstr ""

#: models-efficientnet.R:226 models-efficientnetv2.R:196 models-resnet.R:245 models-vgg.R:111
msgid ""
"Model weights for {.cls {arch}} ({.emph {r[3]}}) will be downloaded and "
"processed if not already available."
msgstr ""

#: models-fcn.R:190 models-fcn.R:239 models-vit.R:44
msgid ""
"Model weights for {.cls {name}} (~{.emph {r[3]}}) will be downloaded and "
"processed if not already available."
msgstr ""

#: models-inception.R:16
msgid ""
"The default weight initialization of inception_v3 will be changed in future "
"releases of"
msgstr ""

#: models-inception.R:17
msgid ""
"torchvision. If you wish to keep the old behavior (which leads to long "
"initialization times"
msgstr ""

#: models-inception.R:18
msgid "due to scipy/scipy#11299), please set init_weights={.val TRUE}."
msgstr ""

#: models-inception.R:24
msgid ""
"length of {.arg inception_blocks} should be 7 instead of "
"{length(inception_blocks)}"
msgstr ""

#: models-mobilenetv2.R:63
msgid ""
"{.var inverted_residual_setting} should be non-empty or a 4-element list, "
"got {.val {inverted_residual_setting}}"
msgstr ""

#: models-resnet.R:34
msgid "basic_block only supports groups=1 and base_width=64"
msgstr ""

#: models-resnet.R:37
msgid "Dilation > 1 not supported in basic_block"
msgstr ""

#: models-resnet.R:145
msgid "replace_stride_with_dilation should be NULL"
msgstr ""

#: models-resnet.R:146
msgid "or a 3-element tuple, got {length(replace_stride_with_dilation)}"
msgstr ""

#: ops-boxes.R:178
msgid "Unsupported Bounding Box Conversions for given in_fmt and out_fmt"
msgstr ""

#: ops-boxes.R:291
msgid "(boxes1[, 3:N] >= boxes1[, 1:2])$all() not TRUE"
msgstr ""

#: ops-boxes.R:293
msgid "(boxes2[, 3:N] >= boxes2[, 1:2])$all() not TRUE"
msgstr ""

#: transforms-defaults.R:298
msgid "must be positive if a single number"
msgstr ""

#: transforms-defaults.R:308
msgid "out of bounds."
msgstr ""

#: transforms-defaults.R:346 transforms-defaults.R:402
msgid "degrees must be positive if it's a single value"
msgstr ""

#: transforms-defaults.R:351 transforms-defaults.R:407
msgid "degrees must be length 1 or 2"
msgstr ""

#: transforms-defaults.R:414
msgid "translate must be length 2"
msgstr ""

#: transforms-defaults.R:417
msgid "translate must be between 0 and 1"
msgstr ""

#: transforms-defaults.R:424
msgid "scale must be length 2"
msgstr ""

#: transforms-defaults.R:427
msgid "scale must be positive"
msgstr ""

#: transforms-defaults.R:436
msgid "shear must be positive if it's a single value"
msgstr ""

#: transforms-defaults.R:441
msgid "shear's length must be 1, 2, or 4"
msgstr ""

#: transforms-defaults.R:579
msgid "not implemented for {class(x)}"
msgstr ""

#: transforms-tensor.R:18
msgid "The cast from {img$dtype} to {dtype} cannot be performed safely."
msgstr ""

#: transforms-tensor.R:72
msgid ""
"std evaluated to zero after conversion to {dtype}, leading to division by "
"zero."
msgstr ""

#: transforms-tensor.R:98
msgid "This interpolation mode is unsupported with Tensor input"
msgstr ""

#: transforms-tensor.R:101
msgid "Size must be a numeric vector of length 1 or 2."
msgstr ""

#: transforms-tensor.R:184
msgid "Padding must be an int or a 1, 2, or 4 element numeric vector"
msgstr ""

#: transforms-tensor.R:187
msgid "Padding mode should be either constant, edge, reflect or symmetric"
msgstr ""

#: transforms-tensor.R:208
msgid "Padding can not be negative for symmetric padding_mode"
msgstr ""

#: transforms-tensor.R:246 transforms-tensor.R:272
msgid "Please provide only 2 dimensions (h, w) for size."
msgstr ""

#: transforms-tensor.R:255
msgid "Requested crop size is bigger than input size."
msgstr ""

#: transforms-tensor.R:320
msgid "brightness factor is negative"
msgstr ""

#: transforms-tensor.R:331
msgid "contrast must be positive"
msgstr ""

#: transforms-tensor.R:344
msgid "hue_factor must be between -0.5 and 0.5."
msgstr ""

#: transforms-tensor.R:369
msgid "saturation factor must be positive."
msgstr ""

#: transforms-tensor.R:401
msgid "`angle` should be int or float"
msgstr ""

#: transforms-tensor.R:404
msgid "`translate` should be length 2"
msgstr ""

#: transforms-tensor.R:407
msgid "`scale` should be positive"
msgstr ""

#: transforms-tensor.R:410
msgid "`shear` should be either a single value or a sequence of 2 values"
msgstr ""

#: transforms-tensor.R:424
msgid "`transform_perspective` is not implemented yet."
msgstr ""

#: transforms-tensor.R:441
msgid "tensor is not a torch image."
msgstr ""

#: transforms-tensor.R:725
msgid "Symmetric padding of N-D tensors are not supported yet"
msgstr ""

#: transforms-tensor.R:734
msgid "gamma must be non-negative"
msgstr ""

#: vision_utils.R:109
msgid "The provided x class {.class {class(x)}} is not supported"
msgstr ""

#: vision_utils.R:122 vision_utils.R:227 vision_utils.R:318 vision_utils.R:423
msgid "magick"
msgstr ""

#: vision_utils.R:125
msgid "Pass individual `x`, not batches"
msgstr ""

#: vision_utils.R:128 vision_utils.R:325 vision_utils.R:431 vision_utils.R:493 vision_utils.R:523
msgid "Only grayscale and RGB images are supported"
msgstr ""

#: vision_utils.R:135
msgid "`x` should be of dtype `torch_uint8` or `torch_float`"
msgstr ""

#: vision_utils.R:138
msgid ""
"Boxes need to be in c(xmin, ymin, xmax, ymax) format. Use "
"torchvision$ops$box_convert to convert them"
msgstr ""

#: vision_utils.R:142
msgid "boxes doesn't contain any box. No box was drawn"
msgstr ""

#: vision_utils.R:147
msgid ""
"Number of labels {.val {length(labels)}} cannot be broadcasted on number of "
"boxes {.val {num_boxes}}"
msgstr ""

#: vision_utils.R:154
msgid "colors vector cannot be broadcasted on boxes"
msgstr ""

#: vision_utils.R:261
msgid "Mask matrix dimensions (%d x %d) don't match expected (%d x %d)"
msgstr ""

#: vision_utils.R:309
msgid ""
"The provided object of class {.cls {class(x)}} is not supported by "
"draw_segmentation_masks."
msgstr ""

#: vision_utils.R:322 vision_utils.R:428 vision_utils.R:490 vision_utils.R:520
msgid "Pass individual `image`, not batches"
msgstr ""

#: vision_utils.R:332
msgid "`x` (image) should be of dtype `torch_uint8` or `torch_float`"
msgstr ""

#: vision_utils.R:339
msgid "`masks` must be of shape (H, W) or (num_masks, H, W)"
msgstr ""

#: vision_utils.R:342
msgid "`masks` is expected to be of dtype torch_bool"
msgstr ""

#: vision_utils.R:345
msgid "`masks` and `image` must have the same height and width"
msgstr ""

#: vision_utils.R:350
msgid "masks doesn't contain any mask. No mask was drawn"
msgstr ""

#: vision_utils.R:358
msgid ""
"colors vector of size {.value {length(colors)}} cannot be broadcasted on {."
"value {num_masks}} masks"
msgstr ""

#: vision_utils.R:425
msgid "`image` should be a torch_tensor"
msgstr ""

#: vision_utils.R:438
msgid "`image` should be of dtype `torch_uint8` or `torch_float`"
msgstr ""

#: vision_utils.R:442
msgid ""
"{.var keypoints} must be of shape (num_instances, K, 2), but is current "
"shape is {.value {keypoints$shape}}"
msgstr ""
