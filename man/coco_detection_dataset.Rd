% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataset-coco.R
\name{coco_detection_dataset}
\alias{coco_detection_dataset}
\title{COCO Detection Dataset}
\usage{
coco_detection_dataset(
  root,
  train = TRUE,
  year = c("2017", "2016", "2014"),
  download = FALSE,
  transforms = NULL,
  target_transform = NULL
)
}
\arguments{
\item{root}{Root directory where the dataset is stored or will be downloaded to.}

\item{train}{Logical. If TRUE, loads the training split; otherwise, loads the validation split.}

\item{year}{Character. Dataset version year. One of \code{"2014"}, \code{"2016"}, or \code{"2017"}.}

\item{download}{Logical. If TRUE, downloads the dataset if it's not already present in the \code{root} directory.}

\item{transforms}{Optional transform function applied to the image.}

\item{target_transform}{Optional transform function applied to the target (labels, boxes, etc.).}
}
\value{
A torch dataset. Each example is a list with two elements:

\describe{
\item{x}{A 3D \code{torch_tensor} of shape \code{(C, H, W)} representing the image.}
\item{y}{A list containing:
\describe{
\item{boxes}{A 2D \code{torch_tensor} of shape \code{(N, 4)} containing bounding boxes
in the format c(\eqn{x_{min}}, \eqn{y_{min}}, \eqn{x_{max}}, \eqn{y_{max}}).}
\item{labels}{A 1D \code{torch_tensor} of type integer, representing the class label for each object.}
\item{area}{A 1D \code{torch_tensor} of type float, indicating the area of each object.}
\item{iscrowd}{A 1D \code{torch_tensor} of type boolean, where \code{TRUE} indicates the object is part of a crowd.}
\item{segmentation}{A list of segmentation polygons for each object.}
\item{masks}{A 3D \code{torch_tensor} of shape \code{(N, H, W)} containing binary segmentation masks.}
}
}
}
The returned object has S3 classes \code{"image_with_bounding_box"} and \code{"image_with_segmentation_mask"}
to enable automatic dispatch by visualization functions such as \code{draw_bounding_boxes()} and \code{draw_segmentation_masks()}.
}
\description{
Loads the MS COCO dataset for object detection and segmentation.
}
\details{
The returned image is in CHW format (channels, height, width), matching the torch convention.
The dataset \code{y} offers object detection annotations such as bounding boxes, labels,
areas, crowd indicators, and segmentation masks from the official COCO annotations.
}
\examples{
\dontrun{
ds <- coco_detection_dataset(
  root = "~/data",
  train = FALSE,
  year = "2017",
  download = TRUE
)

item <- ds[1]

# Visualize bounding boxes
boxed <- draw_bounding_boxes(item)
tensor_image_browse(boxed)

# Visualize segmentation masks (if present)
masked <- draw_segmentation_masks(item)
tensor_image_browse(masked)
}
}
