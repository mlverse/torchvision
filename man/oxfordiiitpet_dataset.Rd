% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataset-oxfordiiitpet.R
\name{oxfordiiitpet_dataset}
\alias{oxfordiiitpet_dataset}
\title{Oxford-IIIT Pet Dataset}
\usage{
oxfordiiitpet_dataset(
  root = tempdir(),
  train = TRUE,
  transform = NULL,
  target_transform = NULL,
  target_type = "category",
  download = FALSE
)
}
\arguments{
\item{root}{Character. Root directory for dataset storage. The dataset will be stored under \code{root/oxfordiiitpet}.}

\item{train}{Logical. Whether to load the training split. Default is \code{TRUE}.}

\item{transform}{Optional function to transform the input image tensors.}

\item{target_transform}{Optional function to transform target labels or segmentation masks.}

\item{target_type}{Character. One of:
\describe{
\item{\code{"category"}}{(default) Integer class index from 1 to 37.}
\item{\code{"binary-category"}}{Returns 1 for Cat and 2 for Dog. Based on whether the class name starts with an uppercase letter.}
\item{\code{"segmentation"}}{Returns a single-channel pixel-level segmentation mask as a torch tensor.}
}}

\item{download}{Logical. Whether to download the dataset if not already present. Default is \code{FALSE}.}
}
\value{
A dataset object of class \code{oxfordiiitpet_dataset}, where each indexed item returns a named list:
\describe{
\item{\code{x}}{An image tensor of shape (3, H, W).}
\item{\code{y}}{The label â€” an integer index, a binary category, or a segmentation mask tensor depending on \code{target_type}.}
}
}
\description{
Oxford-IIIT Pet Dataset
}
\details{
Loads the Oxford-IIIT Pet Dataset, which contains images of 37 pet breeds (cats and dogs),
each annotated with a class label and optional segmentation mask.
Supports three types of targets: class category labels, binary-category labels (Cat vs Dog),
and pixel-level segmentation masks.

The dataset is automatically split into \code{"train"} and \code{"test"} subsets based on the official annotation files.
}
\examples{
\dontrun{
# Load training data with class indices
ds <- oxfordiiitpet_dataset(train = TRUE, download = TRUE)
item <- ds[1]
item$x  # image tensor
item$y  # class index

# Load binary-category labels: 1 = Cat, 2 = Dog
ds_bin <- oxfordiiitpet_dataset(root = root_dir, train = TRUE, target_type = "binary-category")

# Load segmentation masks
ds_seg <- oxfordiiitpet_dataset(root = root_dir, train = TRUE, target_type = "segmentation")

# Use custom collate function for variable image sizes
dl <- dataloader(ds, batch_size = 4, collate_fn = collate_fn_variable_size)
batch <- dataloader_next(dataloader_make_iter(dl))
}

}
